func sort(i32[] a, i32 n) -> void {
  let i32 temp = 0;
  for i in 0..n {
    for j in (i+1)..n {
      if a[j] > a[i] {
        // swap a[j], a[i]
        temp = a[j];
        a[j] = a[i];
        a[i] = temp;
      }
    }
    show(a, n);
  }
  return;
}

func show(i32[] a, i32 n) -> void {
  for i in 0..n {
    print(toString(a[i]));
    if i != (n - 1) {
      print(" ");
    } else {
      println("");
    }
  }
  return;
}


func main() -> i32 {
  let i32[] a = new i32[32];
  let i32 rand = 37;
  for i in 0..32 {
    a[i] = rand;
    print(toString(a[i]));
    if i != 31 {
      print(" ");
    } else {
      println("");
    }
    rand = rand * 29 % 41;
  }
  sort(a, 32);
  return 0;
}

// [Metadata.stdout]
// 37 7 39 24 40 12 20 6 10 3 5 22 23 11 32 26 16 13 8 27 4 34 2 17 1 29 21 35 31 38 36 19
// 40 7 37 24 39 12 20 6 10 3 5 22 23 11 32 26 16 13 8 27 4 34 2 17 1 29 21 35 31 38 36 19
// 40 39 7 24 37 12 20 6 10 3 5 22 23 11 32 26 16 13 8 27 4 34 2 17 1 29 21 35 31 38 36 19
// 40 39 38 7 24 12 20 6 10 3 5 22 23 11 32 26 16 13 8 27 4 34 2 17 1 29 21 35 31 37 36 19
// 40 39 38 37 7 12 20 6 10 3 5 22 23 11 24 26 16 13 8 27 4 32 2 17 1 29 21 34 31 35 36 19
// 40 39 38 37 36 7 12 6 10 3 5 20 22 11 23 24 16 13 8 26 4 27 2 17 1 29 21 32 31 34 35 19
// 40 39 38 37 36 35 7 6 10 3 5 12 20 11 22 23 16 13 8 24 4 26 2 17 1 27 21 29 31 32 34 19
// 40 39 38 37 36 35 34 6 7 3 5 10 12 11 20 22 16 13 8 23 4 24 2 17 1 26 21 27 29 31 32 19
// 40 39 38 37 36 35 34 32 6 3 5 7 10 11 12 20 16 13 8 22 4 23 2 17 1 24 21 26 27 29 31 19
// 40 39 38 37 36 35 34 32 31 3 5 6 7 10 11 12 16 13 8 20 4 22 2 17 1 23 21 24 26 27 29 19
// 40 39 38 37 36 35 34 32 31 29 3 5 6 7 10 11 12 13 8 16 4 20 2 17 1 22 21 23 24 26 27 19
// 40 39 38 37 36 35 34 32 31 29 27 3 5 6 7 10 11 12 8 13 4 16 2 17 1 20 21 22 23 24 26 19
// 40 39 38 37 36 35 34 32 31 29 27 26 3 5 6 7 10 11 8 12 4 13 2 16 1 17 20 21 22 23 24 19
// 40 39 38 37 36 35 34 32 31 29 27 26 24 3 5 6 7 10 8 11 4 12 2 13 1 16 17 20 21 22 23 19
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 3 5 6 7 8 10 4 11 2 12 1 13 16 17 20 21 22 19
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 3 5 6 7 8 4 10 2 11 1 12 13 16 17 20 21 19
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 3 5 6 7 4 8 2 10 1 11 12 13 16 17 20 19
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 3 5 6 4 7 2 8 1 10 11 12 13 16 17 19
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 3 5 4 6 2 7 1 8 10 11 12 13 16 17
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 3 4 5 2 6 1 7 8 10 11 12 13 16
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 3 4 2 5 1 6 7 8 10 11 12 13
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 3 2 4 1 5 6 7 8 10 11 12
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 2 3 1 4 5 6 7 8 10 11
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 2 1 3 4 5 6 7 8 10
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 10 1 2 3 4 5 6 7 8
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 10 8 1 2 3 4 5 6 7
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 10 8 7 1 2 3 4 5 6
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 10 8 7 6 1 2 3 4 5
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 10 8 7 6 5 1 2 3 4
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 10 8 7 6 5 4 1 2 3
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 10 8 7 6 5 4 3 1 2
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 10 8 7 6 5 4 3 2 1
// 40 39 38 37 36 35 34 32 31 29 27 26 24 23 22 21 20 19 17 16 13 12 11 10 8 7 6 5 4 3 2 1
// [Metadata.end]
