// USACO 3.1.3 humble

func main() -> i32 {
  let i32 MAXK = 105;
  let i32 MAXN = 100005;
  let i32 point = 0;
  let i32 K = nextInt();
  let i32 N = nextInt();
  let i32[] primes = new i32[MAXK];
  let i32[] pindex = new i32[MAXK];
  let i32[] ans = new i32[MAXN];
  for i in 0..K {
    primes[i] = nextInt();
  }
  ans[0] = 1;
  while (point <= N) {
    let i32 MIN = 2139062143;
    let i32 k = 0;
    for i in 0..K {
      while (ans[point] >= primes[i] * ans[pindex[i]]) {
	pindex[i] = pindex[i] + 1;
      }
      if (primes[i] * ans[pindex[i]] < MIN) {
        MIN = primes[i] * ans[pindex[i]];
        k = i;
      }
    }
    point = point + 1;
    ans[point] = MIN;
  }
  println(toString(ans[N]));
  return 0;
}

// [Metadata.stdin]
// 100 100000
// 2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109
// 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233
// 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367
// 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499
// 503 509 521 523 541
// [Metadata.end]

// [Metadata.stdout]
// 284456
// [Metadata.end]
